/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define COLEMAK 1
#define NUM     2
#define SYM     3
#define FUN     4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <350>;
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <32 31>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <29 28>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        pageup {
            bindings = <&kp PG_UP>;
            key-positions = <6 7>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 17>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <2 3>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
  &kp Q           &kp W           &kp E        &kp R             &kp T            &kp Y    &kp U              &kp I        &kp O            &kp P
  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &lt 4 G          &kp H    &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_WIN SQT
  &lt 5 Z         &kp X           &kp C        &kp V             &kp B            &kp N    &kp M              &kp COMMA    &kp PERIOD       &kp SLASH
  &kp C_MUTE      &lt 3 TAB       &lt 1 SPACE  &lt 2 ENTER       &lt 4 BACKSPACE  &kp ESC
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp LEFT RIGHT_ARROW>;
        };

        layer_1 {
            bindings = <
  &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4     &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9   &kp NUMBER_0
  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none         &none         &kp RIGHT_SHIFT  &kp LCTRL     &kp RIGHT_ALT  &kp RIGHT_WIN
  &none           &none           &none         &none            &none         &none         &none            &trans        &trans         &none
  &none           &trans          &trans        &trans           &trans        &none
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN UP_ARROW>,
                <&inc_dec_kp LEFT RIGHT_ARROW>;
        };

        layer_2 {
            bindings = <
  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)
  &kp LEFT_WIN      &kp LEFT_ALT      &kp LCTRL         &kp LEFT_SHIFT    &none             &none             &kp MINUS         &kp EQUAL         &kp SEMICOLON     &kp NON_US_BACKSLASH
  &none             &none             &none             &none             &none             &none             &kp LS(MINUS)     &kp LS(EQUAL)     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
  &none             &trans            &trans            &trans            &trans            &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        layer_3 {
            bindings = <
  &kp LC(J)            &kp LA(LC(W))  &kp LC(LEFT_SHIFT)  &kp LC(Y)     &kp LG(TAB)  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   &kp KP_MULTIPLY
  &mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)           &kp LC(F)     &kp LG(L)    &kp NUMBER_4    &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp KP_DIVIDE
  &kp LC(Z)            &kp LC(X)      &kp LC(C)           &kp LC(V)     &kp LC(B)    &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp LA(TAB)
  &kp KP_NUMLOCK       &none          &kp ENTER           &kp NUMBER_0  &kp PERIOD   &kp KP_NUMLOCK
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        layer_4 {
            bindings = <
  &none  &kp F1  &kp F2  &kp F3  &kp F10  &none  &none  &none  &none  &none
  &none  &kp F4  &kp F5  &kp F6  &kp F11  &none  &none  &none  &none  &none
  &none  &kp F7  &kp F8  &kp F9  &kp F12  &none  &none  &none  &none  &none
  &none  &none   &none   &none   &none    &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        layer_5 {
            bindings = <
  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &bl BL_ON     &bl BL_OFF    &bt BT_CLR    &none        &none
  &kp DEL         &kp BACKSPACE    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bootloader  &none
  &none           &kp ENTER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none         &none         &none         &none        &none
  &none           &kp NUMBER_0     &kp PERIOD    &none         &none         &none
            >;
        };
    };
};
