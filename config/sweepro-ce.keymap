/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define COLEMAK 1
#define NUM     2
#define SYM     3
#define FUN     4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <350>;
};

/ {
    macros {
        keys: keys {
            compatible = "zmk,behavior-macro";
            label = "KEYS";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp H &kp L &kp DOT &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp EXCL &kp AT>;
        };
        phonenum: phonenum {
            compatible = "zmk,behavior-macro";
            label = "PHONENUM";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N3 &kp N3 &kp N0 &kp N2 &kp N1 &kp N0 &kp N1 &kp N7 &kp N1 &kp N5>;
        };
        IDnum: IDnum {
            compatible = "zmk,behavior-macro";
            label = "IDNUM";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N7 &kp N1 &kp N0 &kp N8 &kp N3 &kp N1 &kp N9 &kp N8 &kp N8 &kp N0 &kp N6 &kp N0 &kp N2 &kp N9 &kp N0 &kp N1 &kp N6>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        win {
            bindings = <&kp LEFT_WIN>;
            key-positions = <32 31>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        Lshift {
            bindings = <&kp LSHFT>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <29 28>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
        };

        pageup {
            bindings = <&kp PG_UP>;
            key-positions = <6 7>;
        };

        pagedown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 17>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <13 12>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
  &kp Q       &kp W           &kp E           &kp R      &kp T            &kp Y    &kp U    &kp I      &kp O       &kp P
  &kp A       &kp S           &kp D           &lt 4 F    &kp G            &kp H    &lt 4 J  &kp K      &kp L       &kp ENTER
  &kp Z       &kp X           &mt LCTRL C     &kp V      &kp B            &kp N    &kp M    &kp COMMA  &kp PERIOD  &kp SLASH
  &kp C_MUTE  &lt 3 CAPSLOCK  &lt 1 LEFT_WIN  &kp SPACE  &lt 2 BACKSPACE  &kp ESC
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp LEFT RIGHT_ARROW>;
        };

        layer_1 {
            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6          &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9    &kp NUMBER_0
  &kp MINUS     &kp EQUAL     &kp F2        &kp F5        &kp HOME       &kp NON_US_BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON   &kp SQT
  &kp GRAVE     &IDnum        &keys         &phonenum     &kp END        &kp PAGE_DOWN         &kp UP_ARROW      &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT_ARROW
  &none         &kp ENTER     &none         &kp SPACE     &kp BACKSPACE  &none
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>;
        };

        layer_2 {
            bindings = <
  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)      &kp LS(NUMBER_7)      &kp LS(NUMBER_8)       &kp LS(NUMBER_9)   &kp LS(NUMBER_0)
  &kp LS(MINUS)     &kp LS(EQUAL)     &none             &none             &none             &kp NON_US_BACKSLASH  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp LS(SEMICOLON)  &kp LS(SQT)
  &kp LS(GRAVE)     &none             &none             &none             &none             &none                 &none                 &kp LS(COMMA)          &kp LS(PERIOD)     &kp LS(SLASH)
  &none             &kp ENTER         &none             &kp SPACE         &none             &none
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>;
        };

        layer_3 {
            bindings = <
  &kp ESC              &kp LA(LC(W))  &kp LC(LEFT_SHIFT)  &kp LC(Y)     &kp LG(TAB)  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   &kp KP_MULTIPLY
  &mt LA(LC(A)) LC(A)  &kp LC(S)      &kp LG(D)           &kp LC(F)     &kp LG(L)    &kp NUMBER_4    &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp KP_DIVIDE
  &kp LC(Z)            &kp LC(X)      &kp LC(C)           &kp LC(V)     &kp LC(B)    &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &kp LA(TAB)
  &kp KP_NUMLOCK       &none          &kp ENTER           &kp NUMBER_0  &kp PERIOD   &kp KP_NUMLOCK
            >;

            sensor-bindings =
                <&inc_dec_kp 0 0>,
                <&inc_dec_kp 0 0>;
        };

        layer_4 {
            bindings = <
  &none  &none           &kp UP_ARROW    &none            &none  &none  &none     &kp UP_ARROW    &none      &none
  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none
  &none  &none           &none           &none            &none  &none  &none     &none           &none      &none
  &none  &none           &none           &none            &none  &none
            >;
        };
    };
};
